import com.anatawa12.tools.decompileCrasher.gradle.ObfuscationTask
import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar

plugins {
    id "com.anatawa12.tools.decompileCrasher" version "1.2.3" // Оставить или убрать - вот в чем вопрос
    id 'com.github.johnrengelman.shadow' version '7.1.2'
    id 'dev.architectury.loom' version '1.0.+'
    id "maven-publish"
}

sourceCompatibility = targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

loom { // Привет Fabric!
    silentMojangMappingsLicense()

    forge {
        mixinConfigs = [
                "realismpastelic.mixins.json"
        ]
    }
}

repositories {
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    forge "net.minecraftforge:forge:${project.forge_version}"
}

processResources {
    inputs.property "version", project.version

    filesMatching("META-INF/mods.toml") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"

    def targetVersion = 8
    if (JavaVersion.current().isJava9Compatible()) {
        options.release = targetVersion
    }
}

java {
    withSourcesJar()
}

// Удалить - start
task obfJar(type: ObfuscationTask, dependsOn: remapJar) {
    jarTask = remapJar
    destinationDir = file("${buildDir}/libs")
}

build.finalizedBy(obfJar)
obfuscationJar.enabled = false
// Удалить - end

jar {
    manifest {
        attributes([
                "Specification-Title"     : project.mod_id,
                "Specification-Vendor"    : project.mod_author,
                "Specification-Version"   : "1",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : version,
                "Implementation-Vendor"   : project.mod_author,
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}